       AORG >403A  ;Address of FILES link (0000)
       DATA MNTLNK ;Change link to MOUNT

       AORG >5F52  ;Last free address in rom
MNTLNK DATA >0000  ;Indicate last subprogram
       DATA MOUNT  ;MOUNT entry
       BYTE NAM2-NAM
NAM    TEXT 'MOUNT'
NAM2
*---------------------------------------
* DSR Subprogram MOUNT
*---------------------------------------
HB6    EQU >4909
H7E    EQU >4E3F
*N10   EQU >40EA  ;Needs to be even address
*N100  EQU >5AF6  ; "

MPYTBL DATA 1
       DATA 10
       DATA 100

MOUNT MOV  R11,R7
       BL   @>4724             ;Prepare disk operation
       MOV  @>002C(R9),R8      ;Pointer to next token
       AI   R8,>0007           ;skip "MOUNT"

*Get >C8 unquoted string & String len = 1
       BL   @>4B76             ;Return token and string len in R0
       CI   R0,>C801           ;>C8 unquoted string & String len 1
       JNE  ERROR              ;Not >C801 then error

*Get Drive# & comma (>B3)
       INCT R8                 ;Increment pointer
       BL   @>4B76             ;Drive# & comma (>B3)
       SWPB R0                 ;Swap Drive# to lower byte
       AI   R0,>4CD0           ;subtract >B3 comma & ASCII bias >30
       JEQ ERROR               ;If DSK0
       CI   R0,>0003           ;
       JH ERROR                ;If DSK4
       MOV R0,R6               ;Save Drive number in lower byte R6

*Get >C8 unquoted string & String len
       INCT R8                 ;Increment pointer
       BL   @>4B76             ;>C8 unquoted string & String len
       AI   R0,>3800           ;Check MSByte >C8 unquoted string
       CI   R0,>0003           ;Check String length 1-3 (0 not possible)
       JH ERROR                ;
       MOV R0,R3               ;Save string length

*Get disk# ASCII string in R4 & R5
       INCT R8                 ;increment pointer
       BL   @>4B76             ;get disk ASCII string
       MOV R0,R4               ;1st 2 bytes of string in R4
       INCT R8                 ;Increment pointer
       BL   @>4B76             ;Last byte of string in R5
       MOV R0,R5               ;

       CB @>83E8(R3),@HB6      ;Check >B6 closed parenthesis
       JNE ERROR               ;

*Convert disk# ASCII string to value in upper byte R6
       LI R2,MPYTBL
LP00
       MOVB @>83E7(R3),R0
       SLA R0,4   		;Shift out ASCII bias
       SRL R0,12  		;Move to lower byte
       MPY *R2+,R0
       SWPB R1
       AB R1,R6   		;Build disk # in upper byte, Lower byte contains drive #
       JOC ERROR  		;Disk greater than 255
       DEC R3     		;Is string complete
       JNE LP00   		; "

       MOVB @H7E,@>5FF8 	;Send command >81 inverted
       INV R6
       SWPB R6
       MOVB R6,@>5FFE  		;Send Drive number
       SWPB R6
       MOVB R6,@>5FFE  		;Send Disk number

       B    @>5D98     		;return to caller
ERROR  B    @>4676     		;return to caller with error
       END